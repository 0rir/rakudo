JAVA    = java
JAVAC   = javac
JAR     = jar

NQP_PREFIX  = @nqp_prefix@
@bpv(NQP)@       = @shquot(@j_nqp@)@
@bpv(NQP_RR)@    = $(JAVA) -Xss1m -Xms500m -Xmx3000m -cp @q(@nfp(./blib)@@cpsep@@nop($(BLD_NQP_JARS))@@cpsep@rakudo-runtime.jar@cpsep@@nop($(SYSROOT))@@abs2rel(@nqp_classpath@)@)@ nqp
@bpv(RUN_PERL6)@ = $(JAVA) -Xss1m -Xms500m -Xmx3000m -cp @q(@nfp(./blib)@@cpsep@@nop($(BLD_NQP_JARS))@@cpsep@rakudo-runtime.jar@cpsep@perl6.jar@cpsep@@nop($(SYSROOT))@@abs2rel(@nqp_classpath@)@)@ perl6

@bpv(DEBUG_RUNNER)@ = perl6-debug-@backend_abbr@@bpm(RUNNER_SUFFIX)@

NQP_JARS = @nqp_jars@
BLD_NQP_JARS = @bld_nqp_jars@

RUNTIME_JAVAS = @nfp(src/vm/jvm/runtime/org/perl6/rakudo/*.java)@
RUNTIME_JAR = rakudo-runtime.jar

@bpv(BAT)@    = @runner_suffix@

# This is addition to J_ALL_METAMODEL_SOURCES
@bsv(METAMODEL_SOURCES)@ = @nfp(src/vm/jvm/Perl6/Metamodel/JavaHOW.nqp)@

@bpv(ALL_TARGETS)@ = eval-client.pl @bpm(DEBUG_RUNNER)@

@bpv(CLEANUPS)@ = \
  $(RUNTIME_JAR) \
  perl6-eval-server \
  perl6-jdb-server \
  eval-client.pl

@bpv(ML_EXTRA)@ = @nfp(src/vm/jvm/Perl6/JavaModuleLoader.nqp)@
@bpv(PERL6_DEPS_EXTRA)@ = $(RUNTIME_JAR)

@bpv(NQP_FLAGS_EXTRA)@ = --javaclass=perl6

@bpv(HARNESS_TYPE)@ = 5

@include(Makefile-backend-common)@

$(RUNTIME_JAR): $(RUNTIME_JAVAS)
	@echo "+++ Generating\t$@"
	@noecho@$(MKPATH) bin
	@noecho@$(JAVAC) --release 9 -cp @q($(BLD_NQP_JARS))@ -g -d bin -encoding UTF8 $(RUNTIME_JAVAS)
	@noecho@$(JAR) cf0 rakudo-runtime.jar -C bin@slash@ .

$(J_RUNNER):    @@script(create-jvm-runner.pl)@@
	$(PERL5) @shquot(@script(create-jvm-runner.pl)@)@ dev . . @q($(NQP_PREFIX))@ --nqp-lib=blib @q($(NQP_JARS))@

j-runner-default: j-all
	$(CP) $(J_RUNNER) perl6$(J_BAT)
	$(CHMOD) 755 perl6$(J_BAT)

@bsm(PERL6_DEBUG)@: @nfp(src/perl6-debug.nqp)@ @bsm(PERL6)@
	$(J_NQP) $(J_GEN_CAT) @nfp(src/perl6-debug.nqp)@ @nfpq($(J_BUILD_DIR)/main-version.nqp)@ > @nfpq($(J_BUILD_DIR)/perl6-debug.nqp)@
	$(J_NQP) --module-path=blib --target=jar --javaclass=perl6-debug --output=@bsm(PERL6_DEBUG)@ \
	    @nfpq($(J_BUILD_DIR)/perl6-debug.nqp)@

@bpm(DEBUG_RUNNER)@: @@script(create-jvm-runner.pl)@@ @bsm(PERL6_DEBUG)@
	$(PERL5) @shquot(@script(create-jvm-runner.pl)@)@ dev-debug . . @q($(NQP_PREFIX))@ --nqp-lib=blib @q($(NQP_JARS))@

eval-client.pl:
	$(CP) @nfpq($(SDKROOT)$(NQP_PREFIX)/bin/eval-client.pl)@ .

##  testing targets

# Run the spectests that we know work.
j-rakudo_test_run.tar.gz: j-testable $(SPECTEST_DATA)
	- $(J_HARNESS5_WITH_FUDGE) --tests-from-file=$(SPECTEST_DATA) --archive j-rakudo_test_run.tar.gz

#spectest_smolder: rakudo_test_run.tar.gz
#	./perl6 -e "shell qqx[git log -1 --pretty=format:%H].fmt(qq[curl -F architecture=@cpuarch@ -F platform=@osname@ -F revision=%s -F report_file=@rakudo_test_run.tar.gz -F username=parrot-autobot -F password=qa_rocks http://smolder.parrot.org/app/projects/process_add_report/5])"

# Run the tests in t/localtest.data
j-localtest: j-all spectest_checkout @nfp(t/localtest.data)@
	@$(J_HARNESS5_WITH_FUDGE) --tests-from-file=@nfp(t/localtest.data)@

# Run the tests in t/localtest.data with a higher verbosity
j-localtest_loud: j-all spectest_checkout @nfp(t/localtest.data)@
	@$(J_HARNESS5_WITH_FUDGE) --tests-from-file=@nfp(t/localtest.data)@ --verbosity=1

# Run many tests of your choice.
# make sometests TESTFILES=t/foo/bar
sometests: j-all
	@$(J_HARNESS5_WITH_FUDGE) $(TESTFILES)

j-runner-default-install: j-install
	$(PERL5) @shquot(@script(create-jvm-runner.pl)@)@ install @q($(DESTDIR))@ @q($(PREFIX))@ @q($(NQP_PREFIX))@ "" @q($(NQP_JARS))@
	$(CP) @nfpq($(DESTDIR)$(PREFIX)/bin/perl6-j$(J_BAT))@ @nfpq($(DESTDIR)$(PREFIX)/bin/perl6$(J_BAT))@
	$(CHMOD) 755 @nfpq($(DESTDIR)$(PREFIX)/bin/perl6$(J_BAT))@

##  cleaning
j-clean:
	$(RM_F) @bpm(CLEANUPS_ALL)@
	$(RM_RF) bin

j-testclean:

# vim: ft=make noexpandtab ts=4 sw=4
