JAVA    = java
JAVAC   = javac
JAR     = jar
PERL    = perl
PROVE   = prove
NQP     = @nqp@
GEN_CAT = tools/build/gen-cat.pl jvm

PREFIX = @prefix@

MKPATH = $(PERL) -MExtUtils::Command -e mkpath
CP     = $(PERL) -MExtUtils::Command -e cp
CHMOD  = $(PERL) -MExtUtils::Command -e chmod
RM_F   = $(PERL) -MExtUtils::Command -e rm_f

# files we create
PERL6_CLASS     = perl6.class
PERL6_ML_CLASS  = blib/Perl6/ModuleLoader.class
PERL6_CF_CLASS  = blib/Perl6/ConstantFolder.class
PERL6_W_CLASS   = blib/Perl6/World.class
PERL6_G_CLASS   = blib/Perl6/Grammar.class
PERL6_OPS_CLASS = blib/Perl6/Ops.class
PERL6_A_CLASS   = blib/Perl6/Actions.class
PERL6_O_CLASS   = blib/Perl6/Optimizer.class
PERL6_P_CLASS   = blib/Perl6/Pod.class
PERL6_C_CLASS   = blib/Perl6/Compiler.class
PERL6_M_CLASS   = blib/Perl6/Metamodel.class
PERL6_B_CLASS   = blib/Perl6/BOOTSTRAP.class
SETTING_CLASS   = CORE.setting.class
R_SETTING_CLASS = RESTRICTED.setting.class

CLEANUPS = \
  *.manifest \
  blib/Perl6/*.class \
  $(SETTING_CLASS) \
  $(R_SETTING_CLASS) \
  lib/Test.class \
  lib/lib.class \
  lib/Pod/To/Text.class \
  rakudo_test_run.tar.gz \
  src/gen/CORE.setting \
  src/gen/*.class \
  src/gen/*.pm \

all: $(PERL6_G_CLASS)

$(PERL6_ML_CLASS): src/Perl6/ModuleLoader.nqp src/vm/jvm/ModuleLoaderVMConfig.nqp
	$(PERL) $(GEN_CAT) src/vm/jvm/ModuleLoaderVMConfig.nqp src/Perl6/ModuleLoader.nqp > src/gen/ModuleLoader.nqp
	$(NQP) --target=classfile --output=$(PERL6_ML_CLASS) --encoding=utf8 \
	    src/gen/ModuleLoader.nqp

$(PERL6_CF_CLASS): src/Perl6/ConstantFolder.nqp
	$(NQP) --target=classfile --output=$(PERL6_CF_CLASS) --encoding=utf8 \
	    src/Perl6/ConstantFolder.nqp

$(PERL6_W_CLASS): $(PERL6_ML_CLASS) src/Perl6/World.nqp
	$(NQP) --target=classfile --output=$(PERL6_W_CLASS) --encoding=utf8 \
	    src/Perl6/World.nqp

$(PERL6_P_CLASS): $(NQP_EXE) $(DYNEXT_DYNPMC) $(DYNEXT_DYNOPS) src/Perl6/Pod.nqp
	$(NQP) --target=classfile --output=$(PERL6_P_CLASS) --encoding=utf8 \
	    src/Perl6/Pod.nqp

$(PERL6_OPS_CLASS): src/vm/jvm/Perl6/Ops.nqp
	$(NQP) --target=classfile --output=$(PERL6_OPS_CLASS) --encoding=utf8 \
	    src/vm/jvm/Perl6/Ops.nqp

$(PERL6_A_CLASS): src/Perl6/Actions.nqp $(PERL6_P_CLASS) $(PERL6_CF_CLASS) $(PERL6_OPS_CLASS)
	$(NQP) --target=classfile --output=$(PERL6_A_CLASS) --encoding=utf8 \
	    src/Perl6/Actions.nqp

$(PERL6_G_CLASS): src/Perl6/Grammar.nqp $(PERL6_W_CLASS) $(PERL6_A_CLASS) $(PERL6_P_CLASS)
	$(NQP) --target=classfile --output=$(PERL6_G_CLASS) --encoding=utf8 \
	    src/Perl6/Grammar.nqp

##  cleaning
clean:
	$(RM_F) $(CLEANUPS)

distclean: realclean

realclean: clean
	$(RM_F) Makefile

testclean:
